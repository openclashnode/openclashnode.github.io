<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://openclashnode.github.io/news/article-26290.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>func-spring-boot-starter 匿名函数托管</title>
        <meta name="description" content="GitHub项目路径:  https://github.com/yiurhub/func-spring-boot-starter  Gitee项目路径:  https://gitee.com/yiur" />
        <link rel="icon" href="/assets/website/img/openclashnode/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/openclashnode/preloader.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/custom-animation.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/meanmenu.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/slick.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/progresscircle.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/pe-icon-7-stroke.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/icofont.min.css">
    <link rel="stylesheet" href="/assets/website/css/openclashnode/main.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SF51PNP7TM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SF51PNP7TM');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- preloader area start -->
    <div id="loading">
        <div id="loading-center">
            <div id="loading-center-absolute">
                <div class="object" id="object_one"></div>
                <div class="object" id="object_two"></div>
                <div class="object" id="object_three"></div>
            </div>
        </div>
    </div>
    <!-- preloader area end -->
    <!-- header area start  -->
    <header>
        <div class="transparent-header transparent-header-2 header-sticky sticky-3">
            <div class="container">
                <div class="header__inner white-bg">
                    <div class="row align-items-center">
                        <div class="col-xxl-5 col-xl-5 col-lg-5 col-md-8 col-sm-8">
                            <div class="header__left d-flex align-items-center justify-content-between justify-content-lg-start">
                                <div class="header__action-2 mr-40">
                                    <ul>
                                        <li>
                                            <a class="side-toggle" href="javascript:void(0)">
                                                <i class="pe-7s-keypad"></i>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="logo-1 px-2">
                                                                        <a href="/">
                                        <span>Open Clash Node</span>
                                    </a>
                                                                    </div>
                            </div>
                        </div>
                        <div class="col-xxl-6 col-xl-6 col-lg-8 d-none d-lg-block">
                            <div class="main-menu main-menu-2 pl-20">
                                <nav id="mobile-menu">
                                    <ul>
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                <li><a href="#">关于</a></li>
                                        <li><a href="#">联系</a></li>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- header area end -->
    <!-- side toggle start  -->
    <div class="fix">
        <div class="side-info">
            <div class="side-info-content">
                <div class="offset-widget offset-logo mb-30 pb-20">
                    <div class="row align-items-center">

                    </div>
                </div>
                <div class="mobile-menu d-lg-none"></div>
                
                <div class="side-map mt-20 mb-30 d-none d-lg-block">
                </div>
                <div class="contact-infos mt-30 mb-30">
                    <ul class="footer__social offset-social">
                        <li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                        <li><a href="#"><i class="fab fa-twitter"></i></a></li>
                        <li><a href="#"><i class="fab fa-google-plus-g"></i></a></li>
                        <li><a href="#"><i class="fab fa-linkedin-in"></i></a></li>
                        <li><a href="#"><i class="fab fa-vimeo-v"></i></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="offcanvas-overlay"></div>
    <!-- side toggle end -->
    <main>
        <!-- page title area start  -->
        <div class="page-title-area d-flex align-items-center p-relative">
            <nav class="breadcrumb-menu" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                </ol>
            </nav>
            <div class="container">
                <div class="row align-items-center pt-60">
                    <div class="col-md-7 wow slideInLeft">
                        <div class="page-title-content">
                            <h1>func-spring-boot-starter 匿名函数托管</h1>
                        </div>
                    </div>
                    <div class="col-md-5 wow slideInRight">
                        <div class="page-title-img f-right d-none d-sm-block">
                            <img src="/assets/website/img/openclashnode/slider/cargo-image-sm.png" alt="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- page title area end -->
        <!-- about area start  -->
        <section class="about__area pt-100 pb-70">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				</h1> <blockquote> <p>GitHub项目路径:</p> </blockquote> <pre><code class="language-http">https://github.com/yiurhub/func-spring-boot-starter</code></pre> <blockquote> <p>Gitee项目路径:</p> </blockquote> <pre><code class="language-http">https://gitee.com/yiur/func-spring-boot-starter</code></pre> <h2 id="使用注意事项">使用注意事项</h2> <blockquote> <p>推荐版本:</p> </blockquote> <ol> <li><strong>spring-boot-starter<code>2.6.x</code></strong></li> </ol> <h2 id="设计原理">设计原理</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b0158f5010989af0dc22443d5d40d925.jpg" alt="func-spring-boot-starter 匿名函数托管"></p> <h2 id="匿名函数特性">匿名函数特性</h2> <h3 id="匿名函数链接配置">匿名函数链接配置</h3> <h3 id="yaml">Yaml</h3> <pre><code class="language-yaml">func-link:     # 默认代理模式     singleton: true     # 默认开启lambda模式     lambda: true     # 默认的callback回调函数类     call-back: org.func.spring.boot.component.callback.SimpleFuncCallback     # logger 配置     logger:       # 默认false 不输出日志       enable-log: false       # 默认输出日志信息 ${取当前匿名函数的公开信息}       message: "call method --&gt; ${methodName}(${parameterSource})"       # 日志执行日志格式化       date-format: "yyyy-MM-dd HH:mm:ss"       # 输出日志的文件名       file-name: "simple"</code></pre> <h3 id="javaconfig">JavaConfig</h3> <p>添加类注解<code>@EnableFuncLambda</code></p> <p>需要注入<code>FuncLinkFactory</code>工厂类，生产默认<code>FuncLink</code>链接类</p> <p>添加链接的方法为<code>setObject(key, Object)</code><strong>链式编程</strong><strong>泛型约束</strong><strong>Lambda</strong></p> <p>	key: {Spring Bean Name}????{功能链接 | 插件}</p> <p>	object: ${功能链接类| 插件类}</p> <p>FuncLink推荐Lambda操作</p> <p>详细内容请看项目:</p> <pre><code class="language-http">https://gitee.com/yiur/func-spring-boot-starter/tree/main/func-web-simple</code></pre> <pre><code class="language-java">@Configuration @EnableFuncLambda("com.simple.web.lambda") public class FuncLinkConfig {      @Autowired     public FuncLinkFactory funcLinkFactory;      @Bean     public FuncLink funcLink() {         return funcLinkFactory.build()                 .&lt;FuncLogger&gt;setObject("logger:log", (set, log) -&gt; "logger =&gt; ${methodName}\r\n");     }  }</code></pre> <h3 id="严格类型托管">严格类型托管</h3> <p>开发推荐<strong>严格类型托管</strong>，有代码提示，开发效率更高，在Web项目中，可以托管整个<strong>Servcie</strong>层</p> <p>配合Mybaits，Redis等框架一起使用</p> <p><strong>1、定义接口</strong></p> <p>用于SpringBoot自动注入funcLink代理的HttpLink类</p> <pre><code class="language-java">public interface HttpLink {      Object link();  }</code></pre> <p><strong>2、代理类代理接口方法</strong></p> <p><code>@FuncBean(link = "funcLink Bean Name")</code></p> <p>添加类注解<code>@FuncBean</code>声明这是一个匿名函数代理类</p> <p>添加方法注解<code>@FuncLambda</code>声明这是一个代理方法</p> <p>如果有参数请加上参数注解<code>@FuncParameter("参数名")</code></p> <pre><code class="language-java">@Component @FuncBean public class FuncLinkHosting implements HttpLink {      @Override     @FuncLambda(classFile = HttpLink.class)     public Map&lt;String, String&gt; link() {         Map&lt;String, String&gt; map = new HashMap&lt;&gt;(10);         map.put("GitHub", "https://github.com/yiurhub");         map.put("Gitee", "https://gitee.com/yiur");         map.put("博客", "https://www.cnblogs.com/yiur-bgy");         return map;     }  }</code></pre> <h3 id="松散类型托管">松散类型托管</h3> <p>开发使用<strong>不推荐</strong>，后续2.x估计废用，可读性不高</p> <p><strong>1、定义接口</strong></p> <p>添加类注解<code>@Component</code>，用于SpringBoot自动注入funcLink代理的HttpLink类，SpringBoot插件提升</p> <pre><code class="language-java">@Component public interface HttpLink {      Object link();  }</code></pre> <p><strong>2、代理类代理接口方法</strong></p> <p>@FuncBean(link = "funcLink Bean Name")</p> <p>松散类型托管需要注意的事项:</p> <ol> <li>代理方法返回值与接口不一样，接口返回值必须得是Object</li> </ol> <p>添加类注解<code>@FuncBean</code>声明这是一个匿名函数代理类</p> <p>添加方法注解<code>@FuncLambda</code>声明这是一个代理方法</p> <p>如果有参数请加上参数注解<code>@FuncParameter("参数名")</code></p> <pre><code class="language-java">@FuncBean public class FuncLinkHosting {      @FuncLambda(classFile = HttpLink.class)     public Map&lt;String, String&gt; link() {         Map&lt;String, String&gt; map = new HashMap&lt;&gt;(10);         map.put("GitHub", "https://github.com/yiurhub");         map.put("Gitee", "https://gitee.com/yiur");         map.put("博客", "https://www.cnblogs.com/yiur-bgy");         return map;     }  }</code></pre> <h3 id="funclogger">@FuncLogger</h3> <p>添加方法注解<code>@FuncLogger</code>开启方法执行完后的输出日志，<strong>优先级比配置文件高</strong></p> <p><code>@FuncLogger</code>参数<br /> name: 生成的日志文件名，默认为func-link</p> <p>	suffix: 生成的日志文件后缀名，默认为log</p> <p>	path: 生成的日志文件存放绝对路径路径，默认当前项目下的log文件夹下</p> <pre><code class="language-java">@FuncBean public class FuncLinkHosting implements HttpLink {      @Override     @FuncLogger     @FuncLambda(classFile = HttpLink.class)     public Map&lt;String, String&gt; link() {         Map&lt;String, String&gt; map = new HashMap&lt;&gt;(10);         map.put("GitHub", "https://github.com/yiurhub");         map.put("Gitee", "https://gitee.com/yiur");         map.put("博客", "https://www.cnblogs.com/yiur-bgy");         return map;     }  }</code></pre> <h4 id="funclink-返回message">FuncLink 返回message</h4> <h4 id="应用">应用</h4> <p>Logger 日志功能链接，根据执行方法绑定的Bean或者ref，执行此功能</p> <p>在绑定的方法中执行完后，则会输出日志，获取执行的方法信息</p> <h4 id="链接">链接</h4> <p><code>FuncLogger</code></p> <p>	功能链接为:<strong>"${Bean Name}:log"</strong></p> <h4 id="代码">代码</h4> <pre><code class="language-java">@Configuration @EnableFuncLambda("com.simple.web.lambda") public class FuncLinkConfig {      @Autowired     public FuncLinkFactory funcLinkFactory;      @Bean     public FuncLink funcLink() {         return funcLinkFactory.build()                 .&lt;FuncLogger&gt;setObject("httpLink:log", (set, log) -&gt; "logger =&gt; ${methodName}\r\n");     }  }</code></pre> <h3 id="funccallback-注解实现">@FuncCallback 注解实现</h3> <p>添加方法注解<code>@FuncCallback</code>绑定方法执行后的回调函数</p> <p>成功执行回调:<code>then(T result)</code></p> <p>失败执行回调:<code>error(Throwable e)</code></p> <pre><code class="language-java">public class DefaultCallback implements FuncCallback {      @Override     public Object then(Object data) { return data; }      @Override     public Object error(Throwable error) {         return error.getMessage();     }  }</code></pre> <pre><code class="language-java">@FuncBean public class FuncLinkHosting implements HttpLink {      @Override     @FuncCallback(DefaultCallback.class)     @FuncLambda(classFile = HttpLink.class)     public Map&lt;String, String&gt; link() {         Map&lt;String, String&gt; map = new HashMap&lt;&gt;(10);         map.put("GitHub", "https://github.com/yiurhub");         map.put("Gitee", "https://gitee.com/yiur");         map.put("博客", "https://www.cnblogs.com/yiur-bgy");         return map;     }  }</code></pre> <h3 id="funclink-callback-实现">FuncLink Callback 实现</h3> <h4 id="应用-1">应用</h4> <p>Callback 方法执行完回调功能链接，根据执行方法绑定的Bean或者ref，执行此功能</p> <p>在Web项目Service层中返回方法执行的结果，能做到服务熔断操作</p> <h4 id="链接-1">链接</h4> <p><code>FuncCallback&lt;T, R&gt;</code>约束参数值和返回值，<strong>执行优先级: 1</strong></p> <p>	功能链接为:<strong>"${Bean Name}:callback"</strong></p> <p><code>FuncCallbackThen&lt;T, R&gt;</code>约束参数值和返回值，<strong>执行优先级: 2</strong></p> <p>	功能链接为:<strong>"${Bean Name}:callback-then"</strong></p> <p><code>FuncCallbackError&lt;R&gt;</code>约束返回值，<strong>执行优先级: 2</strong></p> <p>	功能链接为:<strong>"${Bean Name}:callback-error"</strong></p> <h4 id="代码-1">代码</h4> <pre><code class="language-java">@Configuration @EnableFuncLambda("com.simple.web.lambda") public class FuncLinkConfig {      @Autowired     public FuncLinkFactory funcLinkFactory;      @Bean("simple")     public FuncLink funcLink() {         return funcLinkFactory.build()                 // httpLink                 .&lt;FuncCallback&lt;Map&lt;String, String&gt;, Object&gt;&gt;setObject("httpLink:callback", new FuncCallback&lt;Map&lt;String, String&gt;, Object&gt;() {                     @Override                     public Object then(Map&lt;String, String&gt; result) {                         return result;                     }                      @Override                     public Object error(Throwable throwable) {                         return throwable;                     }                 })                 .&lt;FuncCallbackThen&lt;Map&lt;String, String&gt;, Object&gt;&gt;setObject("httpLink:callback-then", result -&gt; result)                 .&lt;FuncCallbackError&lt;Object&gt;&gt;setObject("httpLink:callback-error", throwable -&gt; throwable);     }  }</code></pre> <h3 id="funclink-life-实现">FuncLink Life 实现</h3> <h4 id="应用-2">应用</h4> <p>Life 方法执行前后回调功能链接，根据执行方法绑定的Bean或者ref，执行此功能</p> <p>方法执行前会先执行start方法，用来检查参数</p> <p>方法执行后会执行end方法，用来检查返回值</p> <h4 id="链接-2">链接</h4> <p><code>FuncLife&lt;T, R&gt;</code>约束参数值和返回值，<strong>执行优先级: 1</strong></p> <p>	功能链接为:<strong>"${Bean Name}:life"</strong></p> <p><code>FuncLifeStart</code>约束参数值和返回值，<strong>执行优先级: 2</strong></p> <p>	功能链接为:<strong>"${Bean Name}:life-start"</strong></p> <p><code>FuncLifeEnd&lt;T, R&gt;</code>约束返回值，<strong>执行优先级: 2</strong></p> <p>	功能链接为:<strong>"${Bean Name}:life-end"</strong></p> <h4 id="代码-2">代码</h4> <pre><code class="language-java">@Configuration @EnableFuncLambda("com.simple.web.lambda") public class FuncLinkConfig {      @Autowired     public FuncLinkFactory funcLinkFactory;      @Bean("simple")     public FuncLink funcLink() {         return funcLinkFactory.build()                 // httpLink                 .&lt;FuncLife&lt;Object, Object&gt;&gt;setObject("httpLink:life", new FuncLife&lt;Object, Object&gt;() {                     @Override                     public Map&lt;String, Object&gt; start(Map&lt;String, Object&gt; args) {                         return args;                     }                      @Override                     public Object end(Object result) {                         return result;                     }                 })                 .&lt;FuncLifeStart&gt;setObject("httpLink:life-start", args -&gt; args)                 .&lt;FuncLifeEnd&lt;Object, Object&gt;&gt;setObject("httpLink:life-end", result -&gt; result);     }  }</code></pre> <h2 id="113release-更新">1.1.3.RELEASE 更新</h2> <p>func-spring-boot-starter-1.1.2.RELEASE 依赖</p> <pre><code class="language-xml">&lt;!--func--&gt; &lt;dependency&gt;     &lt;groupId&gt;io.github.yiurhub&lt;/groupId&gt;     &lt;artifactId&gt;func-spring-boot-starter&lt;/artifactId&gt;     &lt;version&gt;1.1.3.RELEASE&lt;/version&gt; &lt;/dependency&gt;</code></pre> <h3 id="添加匿名函数链接自定义实现功能">添加匿名函数链接自定义实现功能</h3> <blockquote> <p>AbstractFuncLifePlugin</p> </blockquote> <pre><code class="language-java">public class SimpleLifePlugin extends AbstractFuncLifePlugin {      public SimpleLifePlugin() {     }      public SimpleLifePlugin(String beanName, String[] refs, FuncLink funcLink, FuncCallbackPlugin funcCallbackPlugin) {         super(beanName, refs, funcLink, funcCallbackPlugin);     }      }</code></pre> <blockquote> <p>AbstractFuncCallbackPlugin</p> </blockquote> <pre><code class="language-java">public class SimpleCallbackPlugin extends AbstractFuncCallbackPlugin {      public SimpleCallbackPlugin() {     }      public SimpleCallbackPlugin(String beanName, String[] refs, FuncLink funcLink, FuncProperties funcProperties, FuncLoggerPlugin funcLoggerPlugin) {         super(beanName, refs, funcLink, funcProperties, funcLoggerPlugin);     }      }</code></pre> <blockquote> <p>AbstractFuncLoggerPlugin</p> </blockquote> <pre><code class="language-java">public class SimpleLoggerPlugin extends AbstractFuncLoggerPlugin {      public SimpleLoggerPlugin() {     }      public SimpleLoggerPlugin(String beanName, String[] refs, FuncLink funcLink, FuncProperties funcProperties) {         super(beanName, refs, funcLink, funcProperties);     }      }</code></pre> <h4 id="funclink-使用">FuncLink 使用</h4> <pre><code class="language-java">@Configuration @EnableFuncLambda("com.simple.web.lambda") public class FuncLinkConfig {      @Autowired     public FuncLinkFactory funcLinkFactory;      @Bean("simple")     public FuncLink funcLink() {         return funcLinkFactory.build()                 // httpLink                 .setObject("httpLink:FuncLifePlugin", SimpleLifePlugin.class)                 .setObject("httpLink:FuncCallbackPlugin", SimpleCallbackPlugin.class)                 .setObject("httpLink:FuncLoggerPlugin", SimpleLoggerPlugin.class)     }  }</code></pre> <h2 id="api更改">API更改</h2> <h3 id="注解更改">注解更改</h3> <p><code>@FuncConfiguration</code> 改为<code>@FuncBean</code></p> <p><code>@EnableLog</code> 改为<code>@FuncLogger</code></p> <p><code>CallbackClass</code> 改为<code>@FuncCallback</code></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-26288.htm">Android7.0特性及适配</a></p>
                                        <p>下一个：<a href="/news/article-26738.htm">C语言与java中函数传参比较</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-30487.htm" title="动物疫苗使用方法 动物疫苗使用方法视频">动物疫苗使用方法 动物疫苗使用方法视频</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-node-share-links.htm" title="11月21日→22.5M/S|2024年最新免费节点Open Clash Node订阅链接地址">11月21日→22.5M/S|2024年最新免费节点Open Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-1-node-share-links.htm" title="11月1日→21.9M/S|2024年最新免费节点Open Clash Node订阅链接地址">11月1日→21.9M/S|2024年最新免费节点Open Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-29-node-share.htm" title="12月29日→18.2M/S|2024年最新免费节点Open Clash Node订阅链接地址">12月29日→18.2M/S|2024年最新免费节点Open Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-28-node-share.htm" title="11月28日→21.1M/S|2024年最新免费节点Open Clash Node订阅链接地址">11月28日→21.1M/S|2024年最新免费节点Open Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-31-node-share-links.htm" title="10月31日→19.6M/S|2024年最新免费节点Open Clash Node订阅链接地址">10月31日→19.6M/S|2024年最新免费节点Open Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-25808.htm" title="宠物医院坑人怎么投诉（宠物医院该向哪里投诉）">宠物医院坑人怎么投诉（宠物医院该向哪里投诉）</a></li>
                        <li class="py-2"><a href="/news/article-26738.htm" title="C语言与java中函数传参比较">C语言与java中函数传参比较</a></li>
                        <li class="py-2"><a href="/news/article-29059.htm" title="免费宠物领养协议书范本（免费宠物领养协议书范本下载）">免费宠物领养协议书范本（免费宠物领养协议书范本下载）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-11-free-node-subscribe.htm" title="11月11日→23M/S|2024年最新免费节点Open Clash Node订阅链接地址">11月11日→23M/S|2024年最新免费节点Open Clash Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">7</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- about area end -->
    </main>
        <!-- footer area start  -->
    <footer>
        <div class="copyright__area copyright-bg pt-35">
            <div class="container">
                <div class="row wow slideInUp">
                    <div class="col-xl-8 col-lg-8 col-md-8">
                        <div class="copyright__text mb-35">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <p>
                                <a href="/">Open Clash Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                    <div class="col-xl-4 col-lg-4 col-md-4">
                        <ul class="copyright__tos mb-30 text-end">
                            <li><a href="#">Terms & Conditions</a></li>
                            <li><a href="#">Careers </a></li>
                            <li><a href="#">Get A Quote</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- footer area end -->
    <!-- JS here -->
    <script src="/assets/website/js/frontend/openclashnode/vendor/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/slick.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/jquery.meanmenu.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/ajax-form.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/jquery.scrollUp.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/waypoint.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/progresscircle.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/openclashnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>